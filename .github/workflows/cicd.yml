name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
      GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
      REGION: ${{ secrets.GCE_REGION }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GCS_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > gcp-service-account-key.json
          docker build --build-arg DATABASE_URL=${{secrets.DATABASE_URL}} --build-arg GCS_BUCKET_NAME=${{secrets.BUCKET_NAME}} --build-arg GCP_SA_KEY="$GCP_SA_KEY" -t $REGION-docker.pkg.dev/${{env.PROJECT_ID}}/arsip-template/app:${{ github.sha }} .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/arsip-template/app:${{ github.sha }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to SSH server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} '
            cd /path/to/your/project

            # Update docker-compose.yml to include GCP_SA_KEY
            sed -i "s|GCP_SA_KEY=.*|GCP_SA_KEY=${{ env.GCP_SA_KEY }}|g" docker-compose.yml

            docker-compose pull
            docker-compose down
            docker-compose up -d
          '
